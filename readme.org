#+Title: DHBB 

* Removing BOM from files

https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark

#+BEGIN_SRC bash
for f in $(find ../raw -size 0); do BN=$(basename $f .raw); awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' $BN.text > $BN.new; done
#+END_SRC

Arquivo 6087.text tem tabelas que foram retiradas manualmente antes
dos processamentos NLP.

* Split meta from text

Para debugar 

#+BEGIN_SRC sh
egrep -c "^---$" *.text | awk -F : '$2 == 1 { print }'
#+END_SRC

Para separar arquivos já limpos em um diretório:

#+BEGIN_SRC sh
for f in $(egrep '^cargos:' *.text | awk -F ':' '{ print $1 }'); do cp $f test/; done
#+END_SRC

Para separar textos:

#+BEGIN_SRC sh
  for f in *.text; do
      awk 'BEGIN { text=0; } text>1 {print} /^---$/ { text = text + 1; }' $f > $(basename $f .text).raw ;
  done
#+END_SRC

Para separar metadados:

#+BEGIN_SRC sh
  for f in *.text; do
      awk 'BEGIN { text=0; } text<=1 {print} /^---$/ { text = text + 1; }' $f > $(basename $f .text).meta ;
  done
#+END_SRC

* Executing Freeling

Using =screen=:

#+BEGIN_SRC sh
analyze -f pt.cfg --server --port 50005
ls *.raw > lixo
cat lixo | parallel -j 3 --results out analyzer_client 50005
#+END_SRC

* Executing UDPipe

#+BEGIN_SRC bash
time find ~/work/cpdoc/dhbb/raw -name "*.raw" | xargs ./udpipe --tokenize --tag --parse --outfile=../../cpdoc/dhbb/udp/{}.conllu ../udpipe-ud-2.0-conll17-170315/models/portuguese-ud-2.0-conll17-170315.udpipe
#+END_SRC

* Dictionaries

#+BEGIN_SRC lisp
(ql:quickload :cpdoc)
(in-package :cpdoc)

(mapcar (lambda (file)
		 (let ((bd (extract-meta file)))
		   (list (pathname-name file)
			 (gethash "natureza" bd)
			 (gethash "title" bd))))
	       (directory "text/*.text"))

(with-open-file (file "dic/titles-from-meta.text" :direction :output :if-exists :supersede)
	 (format file "~{~{~a~^|~}~%~}" *))
#+END_SRC

* Files
  
This dictionary has seven directories: 

- ref :: Holds the reference text in each dictionary entry.

- text :: Holds the text body in each dictionary entry.

- wks :: see readme inside it.
     
* Links

- http://pyyaml.org/wiki/PyYAMLDocumentation
- http://www.w3.org/TR/rdf-sparql-query/
